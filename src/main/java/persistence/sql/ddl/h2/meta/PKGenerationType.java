package persistence.sql.ddl.h2.meta;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import java.lang.reflect.Field;

public enum PKGenerationType {
    AUTO(""),
    IDENTITY("generated by default as identity");

    private final String sql;

    PKGenerationType(final String sql) {
        this.sql = sql;
    }

    public static String getSQL(final Field field) {
        if (!field.isAnnotationPresent(Id.class)) {
            throw new IllegalStateException("Not PK Field");
        }
        if (!field.isAnnotationPresent(GeneratedValue.class)) {
            return AUTO.sql;
        }
        GeneratedValue annotation = field.getAnnotation(GeneratedValue.class);
        if (annotation.strategy().equals(GenerationType.IDENTITY)) {
            return IDENTITY.sql;
        }
        throw new IllegalArgumentException("Unsupported GenerationType");
    }
}
